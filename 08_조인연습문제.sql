SELECT 
*
FROM employees e 
INNER JOIN departments d
ON e.department_id = d.department_id;

SELECT 
*
FROM employees e 
LEFT OUTER JOIN departments d
ON e.department_id = d.department_id;

SELECT 
*
FROM employees e 
RIGHT OUTER JOIN departments d
ON e.department_id = d.department_id;

SELECT 
*
FROM employees e 
FULL OUTER JOIN departments d
ON e.department_id = d.department_id;


SELECT 
*
FROM employees e 
FULL OUTER JOIN departments d
ON e.department_id = d.department_id;



--2번
SELECT 
e.first_name ||' '||e.last_name AS name, d.department_id
FROM employees e 
JOIN departments d
ON e.department_id = d.department_id
WHERE e.employee_id = 200;

--문제3
SELECT 
e.first_name, e.job_id, j.job_title
FROM employees e JOIN jobs j ON e.job_id = j.job_id
ORDER BY e.first_name ASC;

--문제4.
SELECT*
FROM JOBS j
LEFT JOIN job_history jh
ON j.job_id =jh.job_id;

--문제5.

SELECT 
e.first_name || ' ' || e.last_name AS full_name,
d.department_name
FROM employees e JOIN departments d
ON e.department_id = d.department_id
WHERE e.first_name='Steven'
AND e.last_name = 'King';

--6번
SELECT *
FROM employees e  CROSS JOIN departments d;

--7번 EMPLOYEES 테이블과 DEPARTMENTS 테이블의 부서번호를 조인하고 
--SA_MAN 사원만의 사원번호, 이름, 급여, 부서명, 근무지를 출력하세요. 
--(Alias를 사용)

SELECT 
e.employee_id, e.first_name || ' ' || e.last_name AS name,
e.salary, d.department_name, loc.city, e.job_id
FROM employees e 
JOIN departments d ON e.department_id = d.department_id
JOIN locations loc ON d.location_id = loc.location_id
WHERE e.job_id ='SA_MAN';

--문제 8.
-- employees, jobs 테이블을 조인 지정하고 job_title이 
--'Stock Manager', 'Stock Clerk'인 직원 정보만 출력하세요.

SELECT *
FROM employees e JOIN jobs j
ON e.job_id = j.job_id
WHERE j.job_title = 'Stock Manager' 
or j.job_title = 'Stock Clerk';

--문제 9.
-- departments 테이블에서 
--직원이 없는 부서를 찾아 출력하세요. LEFT OUTER JOIN 사용

SELECT
d.department_name, e.first_name
FROM departments d LEFT OUTER JOIN employees e
ON d.department_id = e.department_id
WHERE e.first_name IS NULL;










